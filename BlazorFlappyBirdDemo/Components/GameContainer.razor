@if (_gameManager == null)
{
    <em>Loading...</em>
}
else
{
<div class="game-container" tabindex="0"
     @onclick="_gameManager.StartGame" @onkeyup="HandleKeyUp">
    <div class="border-top"></div>
    <div class="sky">
        <Bird Model="_gameManager.Bird" />
    </div>
    <div class="ground"></div>

    @foreach (var pipe in _gameManager.Pipes)
    {
        var p = pipe as LowerPipe;
        if (p != null)
        {
            <LowerPipeComp Model="p" />
        }
    }

    @foreach (var pipe in _gameManager.Pipes)
    {
        var p = pipe as UpperPipe;
        if (p != null)
        {
            <UpperPipeComp Model="p" />
        }
    }
    <div class="border-left"></div>
    <div class="border-right"></div>
</div>
}

@code {
    GameManager _gameManager;

    protected override void OnInitialized()
    {
        _gameManager = new GameManager();
        // Call StateHasChanged which cause to render this component
        _gameManager.MainLoopCompleted += (o, e) => StateHasChanged();
    }

    void HandleKeyUp(KeyboardEventArgs e)
    {
        if (e.Key == " ")
        {
            _gameManager.Jump();
        }
    }
}
